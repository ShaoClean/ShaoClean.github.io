const n=JSON.parse(`{"key":"v-0526d319","path":"/study/frontend/js/jsonp.html","title":"JSONP解决跨域","lang":"zh-CN","frontmatter":{"icon":"javascript","date":"2022-12-22T00:00:00.000Z","category":["前端","JS"],"tag":["jsonp","学习笔记"],"description":"JSONP解决跨域 JSONP(JSON with Padding)是继绝跨域问题的古老方案。同源策略中，对标签的跨域请求限制较小。JSONP利用了这一点。 步骤： 准备一个回调函数 服务器响应时返回的是执行该函数的js代码，将需要返回的数据作为该函数的参数 跨域情况下发起AJAX请求： 前端服务在5000端口： &lt;button type=\\"\\" onclick=\\"request()\\"&gt;get&lt;/button&gt; &lt;script&gt; function callback(data) { console.log(data); } function request() { fetch('http://localhost:8000/data').then((res) =&gt; { console.log(res); }) } &lt;/script&gt;","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/study/frontend/js/jsonp.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"JSONP解决跨域"}],["meta",{"property":"og:description","content":"JSONP解决跨域 JSONP(JSON with Padding)是继绝跨域问题的古老方案。同源策略中，对标签的跨域请求限制较小。JSONP利用了这一点。 步骤： 准备一个回调函数 服务器响应时返回的是执行该函数的js代码，将需要返回的数据作为该函数的参数 跨域情况下发起AJAX请求： 前端服务在5000端口： &lt;button type=\\"\\" onclick=\\"request()\\"&gt;get&lt;/button&gt; &lt;script&gt; function callback(data) { console.log(data); } function request() { fetch('http://localhost:8000/data').then((res) =&gt; { console.log(res); }) } &lt;/script&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-22T07:36:40.000Z"}],["meta",{"property":"article:tag","content":"jsonp"}],["meta",{"property":"article:tag","content":"学习笔记"}],["meta",{"property":"article:published_time","content":"2022-12-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-22T07:36:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JSONP解决跨域\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-22T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-22T07:36:40.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1671694600000,"updatedTime":1671694600000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":1}]},"readingTime":{"minutes":0.99,"words":298},"filePathRelative":"study/frontend/js/jsonp.md","localizedDate":"2022年12月22日","excerpt":"<h1> JSONP解决跨域</h1>\\n<p>JSONP(JSON with Padding)是继绝跨域问题的古老方案。同源策略中，对标签的跨域请求限制较小。JSONP利用了这一点。</p>\\n<p>步骤：</p>\\n<ul>\\n<li>准备一个回调函数</li>\\n<li>服务器响应时返回的是执行该函数的js代码，将需要返回的数据作为该函数的参数</li>\\n</ul>\\n<p>跨域情况下发起AJAX请求：</p>\\n<p>前端服务在5000端口：</p>\\n<div class=\\"language-html line-numbers-mode\\" data-ext=\\"html\\"><pre class=\\"language-html\\"><code>  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">type</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span><span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token special-attr\\"><span class=\\"token attr-name\\">onclick</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span><span class=\\"token value javascript language-javascript\\"><span class=\\"token function\\">request</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token punctuation\\">\\"</span></span></span><span class=\\"token punctuation\\">&gt;</span></span>get<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">callback</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">data</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">request</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token function\\">fetch</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'http://localhost:8000/data'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">res</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  </span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
