const n=JSON.parse('{"key":"v-7669f97e","path":"/study/frontend/js/bisection-method.html","title":"二分法","lang":"zh-CN","frontmatter":{"icon":"javascript","date":"2023-02-08T00:00:00.000Z","category":["算法","JS"],"tag":["数组方法","学习笔记"],"description":"二分法 function bisection(nums, key) { // 开始下标 let start = 0; // 结束下标 let end = nums.length - 1; // 中间下标 let mid = Math.floor(end / 2); while (start &lt;= end) { if (nums[mid] &gt; key) { end = mid - 1; mid = Math.floor((start + end) / 2); } else if (nums[mid] &lt; key) { start = mid + 1; mid = Math.floor((start + end) / 2); } else { return mid; } } return -1; } let a = [0, 1, 2, 3, 4, 5, 6, 434, 435]; bisection(a,5)","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/study/frontend/js/bisection-method.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"二分法"}],["meta",{"property":"og:description","content":"二分法 function bisection(nums, key) { // 开始下标 let start = 0; // 结束下标 let end = nums.length - 1; // 中间下标 let mid = Math.floor(end / 2); while (start &lt;= end) { if (nums[mid] &gt; key) { end = mid - 1; mid = Math.floor((start + end) / 2); } else if (nums[mid] &lt; key) { start = mid + 1; mid = Math.floor((start + end) / 2); } else { return mid; } } return -1; } let a = [0, 1, 2, 3, 4, 5, 6, 434, 435]; bisection(a,5)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-09T14:02:02.000Z"}],["meta",{"property":"article:tag","content":"数组方法"}],["meta",{"property":"article:tag","content":"学习笔记"}],["meta",{"property":"article:published_time","content":"2023-02-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-09T14:02:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二分法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-09T14:02:02.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1675837000000,"updatedTime":1675951322000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":2}]},"readingTime":{"minutes":0.68,"words":203},"filePathRelative":"study/frontend/js/bisection-method.md","localizedDate":"2023年2月8日","excerpt":"<h1> 二分法</h1>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">bisection</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">nums<span class=\\"token punctuation\\">,</span> key</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 开始下标</span>\\n  <span class=\\"token keyword\\">let</span> start <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 结束下标</span>\\n  <span class=\\"token keyword\\">let</span> end <span class=\\"token operator\\">=</span> nums<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 中间下标</span>\\n  <span class=\\"token keyword\\">let</span> mid <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>end <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>start <span class=\\"token operator\\">&lt;=</span> end<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> key<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      end <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n      mid <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>start <span class=\\"token operator\\">+</span> end<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&lt;</span> key<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      start <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n      mid <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>start <span class=\\"token operator\\">+</span> end<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> mid<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">let</span> a <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">434</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">435</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">bisection</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
