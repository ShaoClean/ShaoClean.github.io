const s=JSON.parse(`{"key":"v-38aae928","path":"/demo/session-demo.html","title":"session demo","lang":"zh-CN","frontmatter":{"icon":"eye","date":"2022-10-07T00:00:00.000Z","article":true,"category":["demo"],"tag":["session"],"description":"session demo 使用之前需要安装的依赖： npm i express npm i express-session npm i body-parser npm i cors 完整代码 const express = require('express'); const session = require('express-session'); const bodyParser = require('body-parser') const app = express(); app.use(session( { //一个 String 类型的字符串，作为服务器端生成 session 的签名。 secret: \\"Shh, its a secret!\\", //返回客户端的 key 的名称，默认为 connect.sid,也可以自己设置。 name:\\"login-status\\", //强制保存 session 即使它并没有变化。默认为 true。建议设置成 false。 resave: false, //强制将未初始化的 session 存储。 //当新建了一个 session 且未设定属性或值时，它就处于未初始化状态。 //在设定一个 cookie 前，这对于登陆验证，减轻服务端存储压力，权限控制是有帮助的。(默 认:true)。建议手动添加。 saveUninitialized: true, //设置返回到前端 key 的属性，默认值为{ path: ‘/’, httpOnly: true, secure: false, maxAge: null }。 cookie:{ // maxAge:3000, // secure:true }, //在每次请求时强行设置 cookie，这将重置 cookie 过期时间(默认:false) rolling:true })); app.all('*', function(req, res, next){ // 配置请求源 res.header('Access-Control-Allow-Origin', 'http://localhost:5173'); res.header('Access-Control-Allow-Headers', 'Content-Type, Content-Length, Authorization, Accept, X-Requested-With'); // 允许携带验证信息 res.header('Access-Control-Allow-Credentials',\\"true\\"); // 允许请求方法 res.header('Access-Control-Allow-Methods', 'PUT, POST, GET, DELETE, OPTIONS'); if (req.method === 'OPTIONS'){ res.sendStatus(200); } else{ next(); } }); //引入body-parser,否则不能获取用户端传递过来的数据 app.use(bodyParser.urlencoded({ extended: false })); app.use(bodyParser.json()); app.get('/check', (req, res) =&gt; { console.log(\\"loginStatus\\",req.session) if(req.session.loginStatus === \\"success\\"){ res.send({ code:1, info:\\"check pass!\\", session:req.session }); } else { res.send({ code:0, info:\\"error session!\\", session:req.session }) } }); app.post('/login',(req,res)=&gt;{ const {account,psw} = req.body; if(account === \\"1\\" &amp;&amp; psw === \\"1\\"){ req.session[\\"loginStatus\\"] = \\"success\\" console.log(\\"login success session:\\",req.session[\\"loginStatus\\"]) res.send({ code:1, info:{ age:18, name:\\"clean\\", money:\\"199w\\" }, session:req.session }); }else{ res.send({ code:0, info:\\"error info!\\", session:req.session }) } }) app.listen(4000,()=&gt;{ console.log('listening on *:4000'); })","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/demo/session-demo.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"session demo"}],["meta",{"property":"og:description","content":"session demo 使用之前需要安装的依赖： npm i express npm i express-session npm i body-parser npm i cors 完整代码 const express = require('express'); const session = require('express-session'); const bodyParser = require('body-parser') const app = express(); app.use(session( { //一个 String 类型的字符串，作为服务器端生成 session 的签名。 secret: \\"Shh, its a secret!\\", //返回客户端的 key 的名称，默认为 connect.sid,也可以自己设置。 name:\\"login-status\\", //强制保存 session 即使它并没有变化。默认为 true。建议设置成 false。 resave: false, //强制将未初始化的 session 存储。 //当新建了一个 session 且未设定属性或值时，它就处于未初始化状态。 //在设定一个 cookie 前，这对于登陆验证，减轻服务端存储压力，权限控制是有帮助的。(默 认:true)。建议手动添加。 saveUninitialized: true, //设置返回到前端 key 的属性，默认值为{ path: ‘/’, httpOnly: true, secure: false, maxAge: null }。 cookie:{ // maxAge:3000, // secure:true }, //在每次请求时强行设置 cookie，这将重置 cookie 过期时间(默认:false) rolling:true })); app.all('*', function(req, res, next){ // 配置请求源 res.header('Access-Control-Allow-Origin', 'http://localhost:5173'); res.header('Access-Control-Allow-Headers', 'Content-Type, Content-Length, Authorization, Accept, X-Requested-With'); // 允许携带验证信息 res.header('Access-Control-Allow-Credentials',\\"true\\"); // 允许请求方法 res.header('Access-Control-Allow-Methods', 'PUT, POST, GET, DELETE, OPTIONS'); if (req.method === 'OPTIONS'){ res.sendStatus(200); } else{ next(); } }); //引入body-parser,否则不能获取用户端传递过来的数据 app.use(bodyParser.urlencoded({ extended: false })); app.use(bodyParser.json()); app.get('/check', (req, res) =&gt; { console.log(\\"loginStatus\\",req.session) if(req.session.loginStatus === \\"success\\"){ res.send({ code:1, info:\\"check pass!\\", session:req.session }); } else { res.send({ code:0, info:\\"error session!\\", session:req.session }) } }); app.post('/login',(req,res)=&gt;{ const {account,psw} = req.body; if(account === \\"1\\" &amp;&amp; psw === \\"1\\"){ req.session[\\"loginStatus\\"] = \\"success\\" console.log(\\"login success session:\\",req.session[\\"loginStatus\\"]) res.send({ code:1, info:{ age:18, name:\\"clean\\", money:\\"199w\\" }, session:req.session }); }else{ res.send({ code:0, info:\\"error info!\\", session:req.session }) } }) app.listen(4000,()=&gt;{ console.log('listening on *:4000'); })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-10T09:16:51.000Z"}],["meta",{"property":"article:tag","content":"session"}],["meta",{"property":"article:published_time","content":"2022-10-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-10T09:16:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"session demo\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-07T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-10T09:16:51.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1665157406000,"updatedTime":1670663811000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":3}]},"readingTime":{"minutes":1.52,"words":455},"filePathRelative":"demo/session-demo.md","localizedDate":"2022年10月7日","excerpt":"<h1> session demo</h1>\\n<p>使用之前需要安装的依赖：</p>\\n<ul>\\n<li>npm i express</li>\\n<li>npm i express-session</li>\\n<li>npm i body-parser</li>\\n<li>npm i cors</li>\\n</ul>\\n<h1> 完整代码</h1>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> express <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'express'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> session <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'express-session'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> bodyParser <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'body-parser'</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> app <span class=\\"token operator\\">=</span> <span class=\\"token function\\">express</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">session</span><span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">//一个 String 类型的字符串，作为服务器端生成 session 的签名。</span>\\n        <span class=\\"token literal-property property\\">secret</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Shh, its a secret!\\"</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token comment\\">//返回客户端的 key 的名称，默认为 connect.sid,也可以自己设置。</span>\\n        <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"login-status\\"</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token comment\\">//强制保存 session 即使它并没有变化。默认为 true。建议设置成 false。</span>\\n        <span class=\\"token literal-property property\\">resave</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token comment\\">//强制将未初始化的 session 存储。</span>\\n        <span class=\\"token comment\\">//当新建了一个 session 且未设定属性或值时，它就处于未初始化状态。</span>\\n        <span class=\\"token comment\\">//在设定一个 cookie 前，这对于登陆验证，减轻服务端存储压力，权限控制是有帮助的。(默 认:true)。建议手动添加。</span>\\n        <span class=\\"token literal-property property\\">saveUninitialized</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token comment\\">//设置返回到前端 key 的属性，默认值为{ path: ‘/’, httpOnly: true, secure: false, maxAge: null }。</span>\\n        <span class=\\"token literal-property property\\">cookie</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// maxAge:3000,</span>\\n            <span class=\\"token comment\\">// secure:true</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token comment\\">//在每次请求时强行设置 cookie，这将重置 cookie 过期时间(默认:false)</span>\\n        <span class=\\"token literal-property property\\">rolling</span><span class=\\"token operator\\">:</span><span class=\\"token boolean\\">true</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">all</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'*'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">req<span class=\\"token punctuation\\">,</span> res<span class=\\"token punctuation\\">,</span> next</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 配置请求源</span>\\n    res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">header</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Access-Control-Allow-Origin'</span><span class=\\"token punctuation\\">,</span>  <span class=\\"token string\\">'http://localhost:5173'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">header</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Access-Control-Allow-Headers'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Content-Type, Content-Length, Authorization, Accept, X-Requested-With'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 允许携带验证信息</span>\\n    res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">header</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Access-Control-Allow-Credentials'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"true\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 允许请求方法</span>\\n    res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">header</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Access-Control-Allow-Methods'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'PUT, POST, GET, DELETE, OPTIONS'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>req<span class=\\"token punctuation\\">.</span>method <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'OPTIONS'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sendStatus</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">200</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">next</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">//引入body-parser,否则不能获取用户端传递过来的数据</span>\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>bodyParser<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">urlencoded</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">extended</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>bodyParser<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">json</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/check'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">req<span class=\\"token punctuation\\">,</span> res</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"loginStatus\\"</span><span class=\\"token punctuation\\">,</span>req<span class=\\"token punctuation\\">.</span>session<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>req<span class=\\"token punctuation\\">.</span>session<span class=\\"token punctuation\\">.</span>loginStatus <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\\"success\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token literal-property property\\">code</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">info</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"check pass!\\"</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">session</span><span class=\\"token operator\\">:</span>req<span class=\\"token punctuation\\">.</span>session\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n        res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token literal-property property\\">code</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">info</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"error session!\\"</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">session</span><span class=\\"token operator\\">:</span>req<span class=\\"token punctuation\\">.</span>session\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">post</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/login'</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">req<span class=\\"token punctuation\\">,</span>res</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span>account<span class=\\"token punctuation\\">,</span>psw<span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> req<span class=\\"token punctuation\\">.</span>body<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>account <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\\"1\\"</span> <span class=\\"token operator\\">&amp;&amp;</span> psw <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\\"1\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        req<span class=\\"token punctuation\\">.</span>session<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"loginStatus\\"</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"success\\"</span>\\n        console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"login success session:\\"</span><span class=\\"token punctuation\\">,</span>req<span class=\\"token punctuation\\">.</span>session<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"loginStatus\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token literal-property property\\">code</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">info</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token literal-property property\\">age</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">18</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"clean\\"</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token literal-property property\\">money</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"199w\\"</span>\\n            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">session</span><span class=\\"token operator\\">:</span>req<span class=\\"token punctuation\\">.</span>session\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n        res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token literal-property property\\">code</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">info</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"error info!\\"</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">session</span><span class=\\"token operator\\">:</span>req<span class=\\"token punctuation\\">.</span>session\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">listen</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">4000</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'listening on *:4000'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{s as data};
