const n=JSON.parse('{"key":"v-c3c69d92","path":"/study/frontend/js/handwrite-bind.html","title":"手写 bind","lang":"zh-CN","frontmatter":{"icon":"javascript","date":"2023-02-15T00:00:00.000Z","category":["前端","JS"],"tag":["bind","学习笔记"],"description":"手写 bind Function.prototype.myBind = function (context, ...args) { const fn = this; return function (...args2) { fn.apply(context, args.concat(args2)); }; }; function say(message, other) { console.log(this.name, message, other); } const obj = { name: \\"clean\\", }; // 直接调用 say(\\"hello \\", \\"hi \\"); // myBind调用 let saytoclean = say.myBind(obj, \\"hello\\"); saytoclean(\\"ya~~ \\");","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/study/frontend/js/handwrite-bind.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"手写 bind"}],["meta",{"property":"og:description","content":"手写 bind Function.prototype.myBind = function (context, ...args) { const fn = this; return function (...args2) { fn.apply(context, args.concat(args2)); }; }; function say(message, other) { console.log(this.name, message, other); } const obj = { name: \\"clean\\", }; // 直接调用 say(\\"hello \\", \\"hi \\"); // myBind调用 let saytoclean = say.myBind(obj, \\"hello\\"); saytoclean(\\"ya~~ \\");"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-15T07:27:53.000Z"}],["meta",{"property":"article:tag","content":"bind"}],["meta",{"property":"article:tag","content":"学习笔记"}],["meta",{"property":"article:published_time","content":"2023-02-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-15T07:27:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"手写 bind\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-15T07:27:53.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1676446073000,"updatedTime":1676446073000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":1}]},"readingTime":{"minutes":0.61,"words":183},"filePathRelative":"study/frontend/js/handwrite-bind.md","localizedDate":"2023年2月15日","excerpt":"<h1> 手写 bind</h1>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token class-name\\">Function</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">myBind</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">context<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">...</span>args</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> fn <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token operator\\">...</span>args2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">fn</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">apply</span><span class=\\"token punctuation\\">(</span>context<span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">concat</span><span class=\\"token punctuation\\">(</span>args2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">say</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">message<span class=\\"token punctuation\\">,</span> other</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span> message<span class=\\"token punctuation\\">,</span> other<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">const</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"clean\\"</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">//  直接调用</span>\\n<span class=\\"token function\\">say</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"hello \\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"hi \\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// myBind调用</span>\\n<span class=\\"token keyword\\">let</span> saytoclean <span class=\\"token operator\\">=</span> say<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">myBind</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"hello\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">saytoclean</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ya~~ \\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
