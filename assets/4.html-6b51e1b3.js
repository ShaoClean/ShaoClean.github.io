const t=JSON.parse(`{"key":"v-ec0c3d10","path":"/teach/4.html","title":"分布式动态路","lang":"zh-CN","frontmatter":{"date":"2022-11-20T00:00:00.000Z","icon":"advance","category":["分布式动态路"],"tag":["有用的东西"],"description":"分布式动态路 在面对一个庞大的项目时，我们将不得不面临路由的问题。 传统的做法就是将路由一个一个的导入router.ts路由导航的文件中 也可以通过()=&gt;import('home.router.ts')的懒加载的方式来加载路由 但是面临一个庞大的项目时，有无数个模块，每个模块下面又有无数个子模块，每个子模块还有不同的功能时，此时一个一个导入到一个路由文件中就显得很无力了，后期也不方便管理。 那么此时的解决方法就是将每一个子模块抽离出来，单独写成一个路由文件，例如：home.routes.ts 之后便可以将这个抽离出来的文件再导入到总路由中就可以了。","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/teach/4.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"分布式动态路"}],["meta",{"property":"og:description","content":"分布式动态路 在面对一个庞大的项目时，我们将不得不面临路由的问题。 传统的做法就是将路由一个一个的导入router.ts路由导航的文件中 也可以通过()=&gt;import('home.router.ts')的懒加载的方式来加载路由 但是面临一个庞大的项目时，有无数个模块，每个模块下面又有无数个子模块，每个子模块还有不同的功能时，此时一个一个导入到一个路由文件中就显得很无力了，后期也不方便管理。 那么此时的解决方法就是将每一个子模块抽离出来，单独写成一个路由文件，例如：home.routes.ts 之后便可以将这个抽离出来的文件再导入到总路由中就可以了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-21T14:42:53.000Z"}],["meta",{"property":"article:tag","content":"有用的东西"}],["meta",{"property":"article:published_time","content":"2022-11-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-21T14:42:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式动态路\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-20T00:00:00.000Z\\",\\"dateModified\\":\\"2022-11-21T14:42:53.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1668937915000,"updatedTime":1669041773000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":2}]},"readingTime":{"minutes":1.15,"words":344},"filePathRelative":"teach/4.md","localizedDate":"2022年11月20日","excerpt":"<h1> 分布式动态路</h1>\\n<p>在面对一个庞大的项目时，我们将不得不面临路由的问题。</p>\\n<p>传统的做法就是将路由一个一个的导入<code>router.ts</code>路由导航的文件中</p>\\n<p>也可以通过<code>()=&gt;import('home.router.ts')</code>的懒加载的方式来加载路由</p>\\n<p>但是面临一个庞大的项目时，有无数个模块，每个模块下面又有无数个子模块，每个子模块还有不同的功能时，此时一个一个导入到一个路由文件中就显得很无力了，后期也不方便管理。</p>\\n<p>那么此时的解决方法就是将每一个子模块抽离出来，单独写成一个路由文件，例如：<code>home.routes.ts</code>\\n之后便可以将这个抽离出来的文件再导入到总路由中就可以了。</p>","autoDesc":true}`);export{t as data};
