import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as p}from"./app.0dc16be3.js";const t={},o=p(`<h1 id="for-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#for-\u5FAA\u73AF" aria-hidden="true">#</a> for \u5FAA\u73AF</h1><p>\u4E3B\u8981\u8BB0\u5F55\u4E00\u4E0B<code>for in</code>\u5FAA\u73AF\u548C<code>for of</code>\u4E24\u4E2A\u5FAA\u73AF\u7684\u533A\u522B</p><h2 id="for-in" tabindex="-1"><a class="header-anchor" href="#for-in" aria-hidden="true">#</a> for in</h2><ol><li>\u904D\u5386\u6570\u7EC4\u4E0B\u6807\u548C\u53EF\u679A\u4E3E\u5C5E\u6027</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span>hello <span class="token operator">=</span> <span class="token string">&quot;im arr!&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hi <span class="token operator">=</span> <span class="token string">&quot;hi hi hi!&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//0 1 2 hello hi</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> index<span class="token punctuation">)</span><span class="token comment">//string</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u83B7\u53D6\u81EA\u8EAB\u5C5E\u6027</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 2 3 im arr!</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>for in\u5FAA\u73AF\u8FD8\u53EF\u4EE5\u904D\u5386\u5BF9\u8C61\u7684\u952E</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;clean&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//name age</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="for-of" tabindex="-1"><a class="header-anchor" href="#for-of" aria-hidden="true">#</a> for of</h2><p>for of\u904D\u5386\u6570\u7EC4\u662F\u6570\u7EC4\u5143\u7D20\u4E2D\u7684\u503C\uFF0C\u800C\u4E0D\u80FD\u904D\u5386\u5230\u5176\u8EAB\u4E0A\u5176\u5B83\u5C5E\u6027\u7684\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
arr<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">123</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">123</span>
    
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//1 2 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>for of</code>\u9002\u7528\u904D\u5386\u6570/\u6570\u7EC4\u5BF9\u8C61/\u5B57\u7B26\u4E32/map/set\u7B49\u62E5\u6709\u8FED\u4EE3\u5668\u5BF9\u8C61\uFF08<code>iterator</code>\uFF09\u7684\u96C6\u5408\uFF0C\u4F46\u662F\u4E0D\u80FD\u904D\u5386\u5BF9\u8C61\uFF0C\u56E0\u4E3A\u6CA1\u6709\u8FED\u4EE3\u5668\u5BF9\u8C61\uFF0C\u4F46\u5982\u679C\u60F3\u904D\u5386\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u53EF\u4EE5\u7528<code>for in</code>\u5FAA\u73AF\u6216\u7528<code>Object.keys()</code>\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> myObject<span class="token operator">=</span><span class="token punctuation">{</span>
\u3000\u3000a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
\u3000\u3000b<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
\u3000\u3000c<span class="token operator">:</span><span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> myObject<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//a:1 b:2 c:3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u662F\u4E00\u4E9B\u57FA\u672C\u7684\u77E5\u8BC6\u70B9\uFF0C\u8FD9\u91CC\u4E3B\u8981\u60F3\u8BF4\u4E00\u4E0B\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668\u3002\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668\u662FES6\u65B0\u589E\u7684\uFF0C\u4F7F\u7528\u8FD9\u4E24\u4E2A\u65B0\u7279\u6027\u80FD\u591F\u66F4\u6E05\u6670\u3001\u9AD8\u6548\u3001\u65B9\u4FBF\u5730\u5B9E\u73B0\u8FED\u4EE3\u3002</p><h2 id="\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u8FED\u4EE3\u5668</h2><p><strong>\u4EC0\u4E48\u662F\u8FED\u4EE3\uFF0C\u4EC0\u4E48\u662F\u8FED\u4EE3\u5668\uFF1F</strong></p><p>\u201C\u8FED\u4EE3\u201D\u7684\u610F\u601D\u662F\u6309\u7167\u987A\u5E8F\u53CD\u590D\u591A\u6B21\u6267\u884C\u4E00\u6BB5\u7A0B\u5E8F\uFF0C\u901A\u5E38\u4F1A\u6709\u660E\u786E\u7684\u7EC8\u6B62\u6761\u4EF6\u3002\u8FED\u4EE3\u4F1A\u5728\u4E00\u4E2A\u6709\u5E8F\u96C6\u5408\u4E0A\u8FDB\u884C\uFF0C\u96C6\u5408\u4E2D\u7684\u6240\u6709\u9879\u53EF\u4EE5\u6309\u7167\u65E2\u5B9A\u7684\u987A\u5E8F\u88AB\u904D\u5386\u5230\uFF0C\u7279\u522B\u662F\u5F00\u59CB\u548C\u7ED3\u675F\u9879\u6709\u660E\u786E\u7684\u5B9A\u4E49\u3002</p><p>\u4E86\u89E3\u4E86\u8FED\u4EE3\u7684\u610F\u601D\uFF0C\u90A3\u4E48\u5C31\u5F88\u5BB9\u6613\u7406\u89E3\u8FED\u4EE3\u5668\u7684\u542B\u4E49\u4E86\u3002\u5728\u6211\u770B\u6765\uFF0C\u8FED\u4EE3\u5668\u5C31\u662F\u4E00\u79CD\u5B9E\u73B0\u8FED\u4EE3\u7684\u65B9\u6CD5\uFF0C\u7531\u5B83\u6765\u5E2E\u6211\u4EEC\u5B9E\u73B0\u8FED\u4EE3\u7684\u8FC7\u7A0B\u3002</p><p>\u5B9E\u73B0<code>Iterable</code>\u63A5\u53E3\uFF08\u53EF\u8FED\u4EE3\u534F\u8BAE\uFF09\u8981\u6C42\u540C\u65F6\u5177\u5907\u4E24\u79CD\u80FD\u529B\uFF1A</p><ul><li>\u652F\u6301\u8FED\u4EE3\u7684\u81EA\u6211\u8BC6\u522B\u80FD\u529B</li><li>\u521B\u5EFA\u5B9E\u73B0<code>Iterator</code>\u63A5\u53E3\u7684\u5BF9\u8C61\u7684\u80FD\u529B</li></ul><p>\u5728JS\u4E2D\uFF0C\u8FD9\u610F\u5473\u7740\uFF1A</p><ul><li><p>\u5FC5\u987B\u66B4\u9732\u4E00\u4E2A\u5C5E\u6027\u4F5C\u4E3A<code>\u9ED8\u8BA4\u8FED\u4EE3\u5668</code>\u3002</p><p>\u5BF9\u4E8E\u8FD9\u4E2A\u9ED8\u8BA4\u8FED\u4EE3\u5668\u4E5F\u6709\u8981\u6C42\uFF1A\u5FC5\u987B\u5F15\u7528\u4E00\u4E2A<code>\u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570</code>,\u8C03\u7528\u8FD9\u4E2A\u5DE5\u5382\u51FD\u6570\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u65B0\u8FED\u4EE3\u5668\u3002</p></li><li><p>\u8FD9\u4E2A\u5C5E\u6027\u5FC5\u987B\u4F7F\u7528<code>[Symbol.iterator]</code>\u4F5C\u4E3A\u952E</p></li></ul><p><strong>\u5982\u4F55\u5224\u65AD\u662F\u5426\u5B58\u5728\u9ED8\u8BA4\u8FED\u4EE3\u5C5E\u6027\uFF1F</strong></p><p>\u5728JS\u4E2D\uFF0C\u68C0\u67E5\u662F\u5426\u5B58\u5728<code>\u9ED8\u8BA4\u8FED\u4EE3\u5668</code>\u5C5E\u6027\uFF0C\u53EF\u4EE5\u5224\u65AD\u662F\u5426\u5B58\u5728<code>\u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//undefiend</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//undefiend</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4F8B\u5B50\u8BF4\u660E\u53D8\u91CFnum\u548Cobj\u4E0D\u5B58\u5728<code>\u9ED8\u8BA4\u8FED\u4EE3\u5668</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u0192 [Symbol.iterator]() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u0192 values() { [native code] }</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u0192 [Symbol.iterator]() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u0192 values() { [native code] }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4F8B\u5B50\u8BF4\u660E\u8FD9\u4E9B\u7C7B\u578B\u90FD\u5B9E\u73B0\u4E86<code>\u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570</code>\uFF0C\u800C\u8C03\u7528\u8FD9\u4E2A\u5DE5\u5382\u51FD\u6570\u4F1A\u751F\u6210\u4E00\u4E2A<code>\u8FED\u4EE3\u5668</code>\u3002</p><p>\u4E2A\u4EBA\u7406\u89E3\uFF1A</p><blockquote><p>\u5F53\u4F7F\u7528\u80FD\u63A5\u6536\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u539F\u751F\u8BED\u8A00\u7279\u6027\u65F6\uFF0C\u4F1A\u81EA\u52A8\u5E2E\u6211\u4EEC\u8C03\u7528\u8FED\u4EE3\u5668\uFF0C\u6765\u5B8C\u6210\u5B83\u5185\u90E8\u5B9E\u73B0\u7684\u8FED\u4EE3\u64CD\u4F5C</p></blockquote><p>\u63A5\u6536\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u539F\u751F\u8BED\u8A00\u7279\u6027\u5305\u62EC\uFF1A</p><ul><li>for of</li><li>\u6570\u7EC4\u7ED3\u6784</li><li>\u6269\u5C55\u64CD\u4F5C\u7B26</li><li>Array.from()</li><li>\u521B\u5EFA\u96C6\u5408\u3001\u6620\u5C04</li><li>Promise.all()\u3001Promise.race()\u63A5\u6536\u7531\u671F\u7EA6\u7EC4\u6210\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61</li><li>yield*\u64CD\u4F5C\u7B26\uFF0C\u5728\u751F\u6210\u5668\u4E2D\u4F7F\u7528</li></ul><p>\u5B9E\u73B0\u8FED\u4EE3\uFF08\u663E\u793A\u5B9E\u73B0\u548C\u539F\u751F\u5B9E\u73B0\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u663E\u793A\u5B9E\u73B0</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          count<span class="token operator">++</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span> <span class="token operator">+</span> count <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u63D0\u524D\u7EC8\u6B62\u8FED\u4EE3\u5668&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> f <span class="token keyword">of</span> foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>f <span class="token operator">===</span> <span class="token string">&#39;foo18&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;break value&#39;</span><span class="token punctuation">,</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//foo18</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u539F\u751F\u5B9E\u73B0</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//Array Iterator</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4F7F\u7528break\u3001continue\u3001return\u3001throw\u7B49\u5173\u952E\u5B57\u65F6\uFF0C\u6765\u5173\u95ED\u8FED\u4EE3\u5668\u6267\u884C\u3002\u5982\u679C\u5B58\u5728\u8FD8\u6CA1\u6709\u88AB\u6D88\u8D39\u7684\u503C\u65F6\uFF0C\u4F1A\u89E6\u53D1\u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570\u4E2D\u7684<code>return()</code>\u65B9\u6CD5\u3002</p><h2 id="\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668" aria-hidden="true">#</a> \u751F\u6210\u5668</h2>`,35),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","forin&forof.html.vue"]]);export{k as default};
