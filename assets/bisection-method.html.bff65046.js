import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as p}from"./app.9c4cfe8d.js";const t={},e=p(`<h1 id="\u4E8C\u5206\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u6CD5" aria-hidden="true">#</a> \u4E8C\u5206\u6CD5</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bisection</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F00\u59CB\u4E0B\u6807</span>
  <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment">// \u7ED3\u675F\u4E0B\u6807</span>
  <span class="token keyword">let</span> end <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// \u4E2D\u95F4\u4E0B\u6807</span>
  <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>end <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      end <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>start <span class="token operator">+</span> end<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      start <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>start <span class="token operator">+</span> end<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> mid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">434</span><span class="token punctuation">,</span> <span class="token number">435</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">bisection</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65F6\u95F4\u590D\u6742\u5EA6\u5206\u6790\uFF1A \u7B2C 1 \u6B21\u6298\u534A\uFF1A \u8FD8\u5269 n/2 \u4E2A\u5143\u7D20</p><p>\u7B2C 2 \u6B21\u6298\u534A\uFF1A \u8FD8\u5269 n/4 \u4E2A\u5143\u7D20</p><p>\u7B2C 3 \u6B21\u6298\u534A\uFF1A \u8FD8\u5269 n/8 \u4E2A\u5143\u7D20</p><p>\u2026 \u7B2C k \u6B21\u6298\u534A\uFF1A \u8FD8\u5269 $n/2^k$ \u4E2A\u5143\u7D20</p><p>\u6700\u574F\u7684\u60C5\u51B5\u4E0B\uFF0C\u6700\u540E\u8FD8\u5269\u4E00\u4E2A\u5143\u7D20\uFF0C\u4EE4 $n/2^k=1$\uFF0C\u5219\u5F97$k=logN$</p><p>\u90A3\u4E48\u8FD9\u4E2A T(n)\uFF0C\u5C0F\u4E8E\u7B49\u4E8E\u4E14\u63A5\u8FD1\u4E8E\u51FD\u6570 $fn=logN$\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A $O()=O(logN)$</p>`,8),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","bisection-method.html.vue"]]);export{r as default};
