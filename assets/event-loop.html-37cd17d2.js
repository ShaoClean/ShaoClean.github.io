const t=JSON.parse('{"key":"v-2b4e8c7a","path":"/study/frontend/js/event-loop.html","title":"事件循环机制","lang":"zh-CN","frontmatter":{"icon":"javascript","date":"2022-09-19T00:00:00.000Z","star":10,"category":["前端","JS"],"tag":["事件循环","学习笔记"],"description":"事件循环机制 在了解事件循环机制之前，需要了解： 同步任务 在主线程上排队的任务，前一个任务执行完毕，才能继续执行下一个任务 异步任务 不会立马进入主线程，而是先进入任务队列的任务，只有任务队列通知主线程，某个异步任务可以执行了，任务才会进入主线程去执行。具体见如何理解 JS 的异步 回调函数 js 在浏览器中的执行机制","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/study/frontend/js/event-loop.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"事件循环机制"}],["meta",{"property":"og:description","content":"事件循环机制 在了解事件循环机制之前，需要了解： 同步任务 在主线程上排队的任务，前一个任务执行完毕，才能继续执行下一个任务 异步任务 不会立马进入主线程，而是先进入任务队列的任务，只有任务队列通知主线程，某个异步任务可以执行了，任务才会进入主线程去执行。具体见如何理解 JS 的异步 回调函数 js 在浏览器中的执行机制"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-08T16:29:36.000Z"}],["meta",{"property":"article:tag","content":"事件循环"}],["meta",{"property":"article:tag","content":"学习笔记"}],["meta",{"property":"article:published_time","content":"2022-09-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-08T16:29:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事件循环机制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-19T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-08T16:29:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"异步任务","slug":"异步任务","link":"#异步任务","children":[{"level":3,"title":"宏任务","slug":"宏任务","link":"#宏任务","children":[]},{"level":3,"title":"微任务","slug":"微任务","link":"#微任务","children":[]},{"level":3,"title":"2023.4.8更新","slug":"_2023-4-8更新","link":"#_2023-4-8更新","children":[]}]}],"git":{"createdTime":1663596408000,"updatedTime":1680971376000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":9}]},"readingTime":{"minutes":3.45,"words":1036},"filePathRelative":"study/frontend/js/event-loop.md","localizedDate":"2022年9月19日","excerpt":"<h1> 事件循环机制</h1>\\n<p>在了解事件循环机制之前，需要了解：</p>\\n<ul>\\n<li>\\n<p>同步任务</p>\\n<p>在主线程上排队的任务，前一个任务执行完毕，才能继续执行下一个任务</p>\\n</li>\\n<li>\\n<p>异步任务</p>\\n<p>不会立马进入主线程，而是先进入任务队列的任务，只有任务队列通知主线程，某个异步任务可以执行了，任务才会进入主线程去执行。具体见<a href=\\"/study/frontend/js/js-async.html\\" target=\\"blank\\">如何理解 JS 的异步</a></p>\\n</li>\\n<li>\\n<p>回调函数</p>\\n</li>\\n<li>\\n<p>js 在浏览器中的执行机制</p>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
