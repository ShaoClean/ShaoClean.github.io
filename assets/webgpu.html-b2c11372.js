const t=JSON.parse('{"key":"v-5a541c64","path":"/demo/webgpu.html","title":"WebGPU","lang":"zh-CN","frontmatter":{"icon":"eye","date":"2023-05-14T00:00:00.000Z","article":true,"category":["demo"],"tag":["webgpu"],"description":"WebGPU 记录一下 Web GPU 学习过程中的代码 async function init() { \\t//打通和硬件之间的关系 \\t// 请求GPU适配器 \\tconst adapter = await navigator.gpu.requestAdapter(); \\t// 获取GPU设备对象 通过GPU设备对象可以控制gpu的渲染过程 \\tconst device = await adapter.requestDevice(); \\tconst canvas = document.querySelector(\\"canvas\\"); \\tconst ctx = canvas.getContext(\\"webgpu\\"); \\tconst format = navigator.gpu.getPreferredCanvasFormat(); \\tctx.configure({ \\t\\tdevice, \\t\\tformat, \\t}); \\t// 创建顶点缓冲区表示顶点数据 \\tconst vertexArray = new Float32Array([ \\t\\t// 三角形三个顶点坐标的x y z值 \\t\\t0.0, \\t\\t0.0, \\t\\t0.0, //顶点1坐标 \\t\\t1.0, \\t\\t0.0, \\t\\t0.0, //顶点2坐标 \\t\\t0.0, \\t\\t1.0, \\t\\t0.0, //顶点3坐标 \\t]); \\tconst vertexBuffer = device.createBuffer({ \\t\\tsize: vertexArray.byteLength, // 缓冲区的字节长度 \\t\\tusage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST, // 缓冲区的用途 这里表示用于顶点数据 \\t}); \\t// 把指定数据写入到缓冲区（把vertexArray写入到vertexBuffer） 0表示偏移量 \\tdevice.queue.writeBuffer(vertexBuffer, 0, vertexArray); \\t// 创建渲染管线 \\tconst pipeLine = device.createRenderPipeline({ \\t\\t// 顶点相关配置 \\t\\tvertex: { \\t\\t\\t// 顶点所有的缓冲区模块设置 \\t\\t\\tbuffers: [ \\t\\t\\t\\t// 其中一个顶点缓冲区设置 \\t\\t\\t\\t{ \\t\\t\\t\\t\\t// 一个顶点数据占用的字节长度 \\t\\t\\t\\t\\t// Float32Array中每一个元素是32位，也就是4个字节，一个坐标点用x y z来表示 \\t\\t\\t\\t\\t// 所以一个顶点占用的字节长度就是3 * 4 12个字节 \\t\\t\\t\\t\\tarrayStride: 3 * 4, \\t\\t\\t\\t\\t// 顶点缓冲区属性 \\t\\t\\t\\t\\tattributes: [ \\t\\t\\t\\t\\t\\t{ \\t\\t\\t\\t\\t\\t\\t// GPU显存上顶点缓冲区标记存储位置 \\t\\t\\t\\t\\t\\t\\tshaderLocation: 0, \\t\\t\\t\\t\\t\\t\\t// 格式 \\t\\t\\t\\t\\t\\t\\t// 表示一个顶点数据包含3个32位的浮点数 \\t\\t\\t\\t\\t\\t\\tformat: \\"float32x3\\", \\t\\t\\t\\t\\t\\t\\t// arrayStride表示魅族订单数据间隔字节数 \\t\\t\\t\\t\\t\\t\\toffset: 0, \\t\\t\\t\\t\\t\\t}, \\t\\t\\t\\t\\t], \\t\\t\\t\\t}, \\t\\t\\t], \\t\\t}, \\t}); } init();","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/demo/webgpu.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"WebGPU"}],["meta",{"property":"og:description","content":"WebGPU 记录一下 Web GPU 学习过程中的代码 async function init() { \\t//打通和硬件之间的关系 \\t// 请求GPU适配器 \\tconst adapter = await navigator.gpu.requestAdapter(); \\t// 获取GPU设备对象 通过GPU设备对象可以控制gpu的渲染过程 \\tconst device = await adapter.requestDevice(); \\tconst canvas = document.querySelector(\\"canvas\\"); \\tconst ctx = canvas.getContext(\\"webgpu\\"); \\tconst format = navigator.gpu.getPreferredCanvasFormat(); \\tctx.configure({ \\t\\tdevice, \\t\\tformat, \\t}); \\t// 创建顶点缓冲区表示顶点数据 \\tconst vertexArray = new Float32Array([ \\t\\t// 三角形三个顶点坐标的x y z值 \\t\\t0.0, \\t\\t0.0, \\t\\t0.0, //顶点1坐标 \\t\\t1.0, \\t\\t0.0, \\t\\t0.0, //顶点2坐标 \\t\\t0.0, \\t\\t1.0, \\t\\t0.0, //顶点3坐标 \\t]); \\tconst vertexBuffer = device.createBuffer({ \\t\\tsize: vertexArray.byteLength, // 缓冲区的字节长度 \\t\\tusage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST, // 缓冲区的用途 这里表示用于顶点数据 \\t}); \\t// 把指定数据写入到缓冲区（把vertexArray写入到vertexBuffer） 0表示偏移量 \\tdevice.queue.writeBuffer(vertexBuffer, 0, vertexArray); \\t// 创建渲染管线 \\tconst pipeLine = device.createRenderPipeline({ \\t\\t// 顶点相关配置 \\t\\tvertex: { \\t\\t\\t// 顶点所有的缓冲区模块设置 \\t\\t\\tbuffers: [ \\t\\t\\t\\t// 其中一个顶点缓冲区设置 \\t\\t\\t\\t{ \\t\\t\\t\\t\\t// 一个顶点数据占用的字节长度 \\t\\t\\t\\t\\t// Float32Array中每一个元素是32位，也就是4个字节，一个坐标点用x y z来表示 \\t\\t\\t\\t\\t// 所以一个顶点占用的字节长度就是3 * 4 12个字节 \\t\\t\\t\\t\\tarrayStride: 3 * 4, \\t\\t\\t\\t\\t// 顶点缓冲区属性 \\t\\t\\t\\t\\tattributes: [ \\t\\t\\t\\t\\t\\t{ \\t\\t\\t\\t\\t\\t\\t// GPU显存上顶点缓冲区标记存储位置 \\t\\t\\t\\t\\t\\t\\tshaderLocation: 0, \\t\\t\\t\\t\\t\\t\\t// 格式 \\t\\t\\t\\t\\t\\t\\t// 表示一个顶点数据包含3个32位的浮点数 \\t\\t\\t\\t\\t\\t\\tformat: \\"float32x3\\", \\t\\t\\t\\t\\t\\t\\t// arrayStride表示魅族订单数据间隔字节数 \\t\\t\\t\\t\\t\\t\\toffset: 0, \\t\\t\\t\\t\\t\\t}, \\t\\t\\t\\t\\t], \\t\\t\\t\\t}, \\t\\t\\t], \\t\\t}, \\t}); } init();"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-14T15:22:17.000Z"}],["meta",{"property":"article:tag","content":"webgpu"}],["meta",{"property":"article:published_time","content":"2023-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-14T15:22:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WebGPU\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-14T15:22:17.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1684077737000,"updatedTime":1684077737000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":1}]},"readingTime":{"minutes":1.28,"words":383},"filePathRelative":"demo/webgpu.md","localizedDate":"2023年5月14日","excerpt":"<h1> WebGPU</h1>\\n<p>记录一下 Web GPU 学习过程中的代码</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token comment\\">//打通和硬件之间的关系</span>\\n\\n\\t<span class=\\"token comment\\">// 请求GPU适配器</span>\\n\\t<span class=\\"token keyword\\">const</span> adapter <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> navigator<span class=\\"token punctuation\\">.</span>gpu<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">requestAdapter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token comment\\">// 获取GPU设备对象 通过GPU设备对象可以控制gpu的渲染过程</span>\\n\\t<span class=\\"token keyword\\">const</span> device <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> adapter<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">requestDevice</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">const</span> canvas <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">querySelector</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"canvas\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">const</span> ctx <span class=\\"token operator\\">=</span> canvas<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getContext</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"webgpu\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">const</span> format <span class=\\"token operator\\">=</span> navigator<span class=\\"token punctuation\\">.</span>gpu<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getPreferredCanvasFormat</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tctx<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">configure</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n\\t\\tdevice<span class=\\"token punctuation\\">,</span>\\n\\t\\tformat<span class=\\"token punctuation\\">,</span>\\n\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token comment\\">// 创建顶点缓冲区表示顶点数据</span>\\n\\t<span class=\\"token keyword\\">const</span> vertexArray <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Float32Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>\\n\\t\\t<span class=\\"token comment\\">// 三角形三个顶点坐标的x y z值</span>\\n\\t\\t<span class=\\"token number\\">0.0</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token number\\">0.0</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token number\\">0.0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">//顶点1坐标</span>\\n\\t\\t<span class=\\"token number\\">1.0</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token number\\">0.0</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token number\\">0.0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">//顶点2坐标</span>\\n\\t\\t<span class=\\"token number\\">0.0</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token number\\">1.0</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token number\\">0.0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">//顶点3坐标</span>\\n\\t<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">const</span> vertexBuffer <span class=\\"token operator\\">=</span> device<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createBuffer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token literal-property property\\">size</span><span class=\\"token operator\\">:</span> vertexArray<span class=\\"token punctuation\\">.</span>byteLength<span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 缓冲区的字节长度</span>\\n\\t\\t<span class=\\"token literal-property property\\">usage</span><span class=\\"token operator\\">:</span> GPUBufferUsage<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">VERTEX</span> <span class=\\"token operator\\">|</span> GPUBufferUsage<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">COPY_DST</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 缓冲区的用途   这里表示用于顶点数据</span>\\n\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token comment\\">// 把指定数据写入到缓冲区（把vertexArray写入到vertexBuffer） 0表示偏移量</span>\\n\\tdevice<span class=\\"token punctuation\\">.</span>queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">writeBuffer</span><span class=\\"token punctuation\\">(</span>vertexBuffer<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> vertexArray<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token comment\\">// 创建渲染管线</span>\\n\\t<span class=\\"token keyword\\">const</span> pipeLine <span class=\\"token operator\\">=</span> device<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createRenderPipeline</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token comment\\">// 顶点相关配置</span>\\n\\t\\t<span class=\\"token literal-property property\\">vertex</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token comment\\">// 顶点所有的缓冲区模块设置</span>\\n\\t\\t\\t<span class=\\"token literal-property property\\">buffers</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n\\t\\t\\t\\t<span class=\\"token comment\\">// 其中一个顶点缓冲区设置</span>\\n\\t\\t\\t\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t\\t\\t<span class=\\"token comment\\">// 一个顶点数据占用的字节长度</span>\\n\\t\\t\\t\\t\\t<span class=\\"token comment\\">// Float32Array中每一个元素是32位，也就是4个字节，一个坐标点用x y z来表示</span>\\n\\t\\t\\t\\t\\t<span class=\\"token comment\\">// 所以一个顶点占用的字节长度就是3 * 4 12个字节</span>\\n\\t\\t\\t\\t\\t<span class=\\"token literal-property property\\">arrayStride</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">3</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t\\t\\t\\t<span class=\\"token comment\\">// 顶点缓冲区属性</span>\\n\\t\\t\\t\\t\\t<span class=\\"token literal-property property\\">attributes</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"token comment\\">// GPU显存上顶点缓冲区标记存储位置</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"token literal-property property\\">shaderLocation</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"token comment\\">// 格式</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"token comment\\">// 表示一个顶点数据包含3个32位的浮点数</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"token literal-property property\\">format</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"float32x3\\"</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"token comment\\">// arrayStride表示魅族订单数据间隔字节数</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"token literal-property property\\">offset</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t\\t\\t\\t<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t\\t\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t\\t<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
