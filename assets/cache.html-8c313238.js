const e=JSON.parse('{"key":"v-38df88d7","path":"/study/basic/cache.html","title":"HTTP 缓存","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2023-09-01T00:00:00.000Z","category":["浏览器"],"tag":["缓存"],"description":"HTTP 缓存 前几天在想如何解决图片加载的问题时，想到了用 redis 区实现。大致的思路是就是将已经请求过的图片资源存放在 redis 中。但是后面又想了一下，这样会很浪费资源。不仅本地存了原始的图片文件，数据库中存了图片对应的 base64，如果还往 redis 中再存一份的话，会非常的浪费空间资源。","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/study/basic/cache.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"HTTP 缓存"}],["meta",{"property":"og:description","content":"HTTP 缓存 前几天在想如何解决图片加载的问题时，想到了用 redis 区实现。大致的思路是就是将已经请求过的图片资源存放在 redis 中。但是后面又想了一下，这样会很浪费资源。不仅本地存了原始的图片文件，数据库中存了图片对应的 base64，如果还往 redis 中再存一份的话，会非常的浪费空间资源。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-02T06:45:01.000Z"}],["meta",{"property":"article:tag","content":"缓存"}],["meta",{"property":"article:published_time","content":"2023-09-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-02T06:45:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTP 缓存\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-02T06:45:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]}],"git":{"createdTime":1693637101000,"updatedTime":1693637101000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":1}]},"readingTime":{"minutes":2.48,"words":744},"filePathRelative":"study/basic/cache.md","localizedDate":"2023年9月1日","excerpt":"<h1> HTTP 缓存</h1>\\n<p>前几天在想如何解决图片加载的问题时，想到了用 redis 区实现。大致的思路是就是将已经请求过的图片资源存放在 redis 中。但是后面又想了一下，这样会很浪费资源。不仅本地存了原始的图片文件，数据库中存了图片对应的 base64，如果还往 redis 中再存一份的话，会非常的浪费空间资源。</p>","autoDesc":true}');export{e as data};
