import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as o,a as n,b as s,e as c,d as a,r as i}from"./app.96ca12ac.js";const l={},u=a('<h1 id="ioc" tabindex="-1"><a class="header-anchor" href="#ioc" aria-hidden="true">#</a> IoC</h1><p>\u4E4B\u524D\u5237\u5230\u5F88\u591A Java \u4E2D\u5173\u4E8E IoC \u7684\u89C6\u9891\uFF0C\u770B\u7740\u597D\u6709\u610F\u601D\u5C31\u60F3\u4E86\u89E3\u4E00\u4E0B JS \u4E2D\u662F\u5426\u6709\u76F8\u540C\u7684\u4F7F\u7528\u573A\u666F\uFF1F</p><p>\u4EC0\u4E48\u662F IoC\uFF1A</p><blockquote><p>IoC\uFF08Inversion of Control\uFF09\u63A7\u5236\u53CD\u8F6C\u6216\u8005\u4F9D\u8D56\u5012\u7F6E\uFF0C\u662F\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u4E2D\u7684\u4E00\u79CD\u8BBE\u8BA1\u539F\u5219\uFF0C\u7528\u6765\u964D\u4F4E\u8BA1\u7B97\u673A\u4EE3\u7801\u4E4B\u95F4\u7684\u8026\u5408\u5EA6\u3002</p></blockquote><p>\u6211\u770B Java \u535A\u4E3B\u5BF9\u4E8E IoC \u7684\u4ECB\u7ECD\uFF0C\u521D\u6B65\u7406\u89E3\u4E3A\u662F Java \u4E2D\u662F\u4EE5 Class \u4E3A\u57FA\u7840\u7684\uFF0C\u6BCF\u6B21\u4F7F\u7528\u4E00\u4E2A Class \u7684\u65F6\u5019\u90FD\u9700\u8981\u624B\u52A8\u53BB new \u4E00\u4E2A\uFF0C\u975E\u5E38\u7684\u7E41\u7410\uFF0C\u7528 IoC \u53EF\u4EE5\u5F88\u65B9\u4FBF\u7684\u89E3\u51B3\u8FD9\u4E00\u7E41\u7410\u7684\u95EE\u9898\u3002\u4E0D\u8FC7\u8FD9\u4E2A\u7406\u89E3\u975E\u5E38\u7684\u7247\u9762\uFF0C\u5B58\u5728\u4E00\u5B9A\u7684\u95EE\u9898\uFF0CIoC \u4E0D\u6B62\u89E3\u51B3\u4E86\u8FD9\u4E00\u70B9\u70B9\u95EE\u9898\u3002</p><p>\u540E\u9762\u7406\u89E3\u52A0\u6DF1\u4E86\u4E00\u6B65\uFF0C\u8FD9\u662F\u4E00\u79CD\u9762\u5411\u63A5\u53E3\u7684\u7F16\u7A0B\u601D\u60F3\uFF1A\u5728\u6700\u9AD8\u5C42\u7684\u6A21\u5757\u4E2D\u4F7F\u7528\u4E00\u4E2A\u6307\u5B9A\u7684\u65B9\u6CD5\uFF08\u76F8\u5F53\u4E8E\u5B9A\u4E49\u4E00\u4E2A\u63A5\u53E3\uFF09\uFF0C\u5B83\u4F9D\u8D56\u7684\u6A21\u5757\u4E2D\u521B\u5EFA\u8FD9\u4E2A\u6307\u5B9A\u7684\u65B9\u6CD5\uFF08\u5B9E\u73B0\u63A5\u53E3\uFF09\u3002\u6240\u4EE5\u6309\u7167\u6211\u73B0\u5728\u7684\u7406\u89E3\u66F4\u5E0C\u671B\u53EB\u5B83\u4F9D\u8D56\u5012\u7F6E\u3002</p><blockquote><p>\u5728\u4F20\u7EDF\u9762\u5411\u5BF9\u8C61\u7684\u7F16\u7801\u8FC7\u7A0B\u4E2D\uFF0C\u5F53\u7C7B\u4E0E\u7C7B\u4E4B\u95F4\u5B58\u5728\u4F9D\u8D56\u5173\u7CFB\u65F6\uFF0C\u901A\u5E38\u4F1A\u76F4\u63A5\u5728\u7C7B\u7684\u5185\u90E8\u521B\u5EFA\u4F9D\u8D56\u5BF9\u8C61\uFF0C\u8FD9\u6837\u5C31\u5BFC\u81F4\u7C7B\u4E0E\u7C7B\u4E4B\u95F4\u5F62\u6210\u4E86\u8026\u5408\uFF0C\u4F9D\u8D56\u5173\u7CFB\u8D8A\u590D\u6742\uFF0C\u8026\u5408\u7A0B\u5EA6\u5C31\u4F1A\u8D8A\u9AD8\uFF0C\u800C\u8026\u5408\u5EA6\u9AD8\u7684\u4EE3\u7801\u4F1A\u975E\u5E38\u96BE\u4EE5\u8FDB\u884C\u4FEE\u6539\u548C\u5355\u5143\u6D4B\u8BD5\u3002\u800C IoC \u5219\u662F\u4E13\u95E8\u63D0\u4F9B\u4E00\u4E2A\u5BB9\u5668\u8FDB\u884C\u4F9D\u8D56\u5BF9\u8C61\u7684\u521B\u5EFA\u548C\u67E5\u627E\uFF0C\u5C06\u5BF9\u4F9D\u8D56\u5BF9\u8C61\u7684\u63A7\u5236\u6743\u7531\u7C7B\u5185\u90E8\u4EA4\u5230\u5BB9\u5668\u8FD9\u91CC\uFF0C\u8FD9\u6837\u5C31\u5B9E\u73B0\u4E86\u7C7B\u4E0E\u7C7B\u7684\u89E3\u8026\uFF0C\u4FDD\u8BC1\u6240\u6709\u7684\u7C7B\u90FD\u662F\u53EF\u4EE5\u7075\u6D3B\u4FEE\u6539\u3002</p></blockquote><h2 id="\u52A0\u5165-ioc-\u601D\u60F3" tabindex="-1"><a class="header-anchor" href="#\u52A0\u5165-ioc-\u601D\u60F3" aria-hidden="true">#</a> \u52A0\u5165 IoC \u601D\u60F3</h2><p>\u6BD4\u5982\u8981\u5B9E\u73B0\u4E00\u4E2A\u6211\u4E4B\u524D\u9879\u76EE\u4E2D\u9047\u5230\u7684\u91CD\u590D\u52B3\u52A8\u6027\u5F88\u9AD8\u7684\u95EE\u9898\uFF1A</p><ul><li>\u540E\u53F0\u63A5\u53E3\u7528 NestJs \u642D\u5EFA\uFF0C\u642D\u5EFA\u5B8C\u540E\u8FD8\u9700\u8981\u5728\u524D\u7AEF\u6309\u7167\u5B83\u7684\u8DEF\u7531\u89C4\u5219\u5F97\u5230\u670D\u52A1\u8BF7\u6C42\u7684\u5177\u4F53\u5730\u5740</li><li>\u524D\u7AEF\u8FD8\u9700\u8981\u6839\u636E\u670D\u52A1\u8BF7\u6C42\u5730\u5740\u6765\u7F16\u5199 ajax \u8BF7\u6C42</li><li>\u524D\u7AEF\u8FD8\u9700\u8981\u5C06 ajax \u8BF7\u6C42\u8FDB\u884C\u4E8C\u6B21\u5C01\u88C5</li></ul><p>\u6240\u4EE5\u5C31\u51FA\u73B0\u4E86\u4E00\u4E2A\u5F88\u70E6\u4EBA\u7684\u95EE\u9898\uFF0C\u5199\u5B8C\u540E\u53F0\u63A5\u53E3\uFF0C\u8FD8\u9700\u8981\u518D\u5199\u524D\u7AEF\u7684\u8BF7\u6C42\u3002\u4E8E\u662F\u5C31\u60F3\u5230\u7528\u811A\u672C\u7684\u65B9\u5F0F\u81EA\u52A8\u8BFB\u53D6 NestJs \u7684 Controller \u5C42\u4E2D\u7684\u4EE3\u7801\u6765\u751F\u6210\u524D\u7AEF\u8BF7\u6C42\u7684\u65B9\u6CD5\u3002</p>',11),k={href:"https://www.hiclean.icu/demo/read-apis-nest.html",target:"_blank",rel:"noopener noreferrer"},r=a(`<p>\u4F46\u662F\u4F1A\u53D1\u73B0\u8FD9\u4E2A\u4EE3\u7801\u7684\u8026\u5408\u5EA6\u975E\u5E38\u7684\u9AD8\uFF1A\u8BFB\u53D6\u6587\u4EF6\u6570\u636E-\u66FF\u6362-\u751F\u6210\u6570\u636E-\u521B\u5EFA\u6587\u4EF6\uFF0C\u4E5F\u5C31\u662F\u5F88\u591A\u529F\u80FD\u65E0\u6CD5\u590D\u7528\uFF0C\u4E00\u65E6\u67D0\u4E00\u4E2A\u6D41\u7A0B\u9700\u8981\u589E\u52A0\u65B0\u7684\u903B\u8F91\uFF0C\u5C31\u5F88\u5BB9\u6613\u51FA\u95EE\u9898\uFF0C\u6574\u4E2A\u4EE3\u7801\u4F1A\u663E\u5F97\u975E\u5E38\u7684\u81C3\u80BF\u3002</p><p>\u867D\u7136\u73B0\u5728\u624D\u8FD9\u4E48\u51E0\u884C\u4EE3\u7801\uFF0C\u800C\u4E14\u80FD\u5B9E\u73B0\u529F\u80FD\u3002\u4F46\u662F\u53EF\u4EE5\u53D1\u73B0\uFF0C\u8BFB\u53D6\u6587\u4EF6\u6570\u636E\u3001\u521B\u5EFA\u6587\u4EF6\u7B49\u529F\u80FD\u9002\u7528\u6027\u5E94\u8BE5\u662F\u5F88\u5F3A\u7684\uFF0C\u4E0D\u6B62\u5E94\u8BE5\u5C40\u9650\u4E8E\u6B64\u3002\u4E8E\u662F\u540E\u9762\u6211\u53C8\u63A5\u89E6\u5230\u4E86<code>\u7C7B</code>\u7684\u601D\u60F3\uFF1A\u4E00\u4E2A\u7C7B\u5E72\u4E00\u4EF6\u4E8B\uFF0C\u6BD4\u5982\u8BF4\u53EF\u4EE5\u5C06\u8FD9\u4E2A\u8FC7\u7A0B\u5206\u4E3A\u4E24\u4E2A\u7C7B\uFF1A</p><ul><li>\u6587\u4EF6\u7C7B\uFF0C\u5B9E\u73B0\u6587\u4EF6\u7684\u8BFB\u53D6\u3001\u521B\u5EFA\u6587\u4EF6\u529F\u80FD</li><li>Api \u7C7B\uFF0C\u8D1F\u8D23\u6570\u636E\u7684\u66FF\u6362\u3001\u751F\u6210\u51FD\u6570</li></ul><p>File \u7C7B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> fs <span class="token keyword">from</span> <span class="token string">&quot;fs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FileData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../interface/FileData&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> InitClass <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../interface/InitClass&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token keyword">implements</span> <span class="token class-name">InitClass</span> <span class="token punctuation">{</span>
	<span class="token keyword">static</span> instances<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	files<span class="token operator">:</span> FileData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token function">constructor</span><span class="token punctuation">(</span>options<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> instance <span class="token keyword">of</span> File<span class="token punctuation">.</span>instances<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u6267\u884C\u5B9E\u4F8B\u4E2D\u7684init\u65B9\u6CD5</span>
				instance<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFile</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u521D\u59CB\u5316</span>
	<span class="token function">init</span><span class="token punctuation">(</span>container<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		container<span class="token punctuation">.</span>file <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u5411\u4F9D\u8D56\u5173\u7CFBMap\u4E2D\u6CE8\u5165\u5B9E\u4F8B</span>
	<span class="token keyword">static</span> inject<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token keyword">new</span></span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
		instance<span class="token operator">:</span> InstanceType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
	<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		File<span class="token punctuation">.</span>instances<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">,</span> instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u6DFB\u52A0\u6587\u4EF6</span>
	<span class="token keyword">private</span> <span class="token function">add</span><span class="token punctuation">(</span>options<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> fileName <span class="token keyword">in</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>files<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				fileName<span class="token punctuation">,</span>
				filePath<span class="token operator">:</span> options<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span><span class="token punctuation">,</span>
				fileData<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u83B7\u53D6\u6587\u4EF6\u6570\u636E</span>
	<span class="token keyword">async</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> file <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> file<span class="token punctuation">.</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">const</span> text <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			file<span class="token punctuation">.</span>fileData <span class="token operator">=</span> text<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//\u5C06files\u6570\u7EC4\u5BF9\u8C61\u4E2D\u7684\u6570\u636E\u8F6C\u6362\u6210\u6587\u4EF6</span>
	<span class="token function">createFile</span><span class="token punctuation">(</span>files<span class="token operator">:</span> FileData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> file <span class="token keyword">of</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">let</span> resultPath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
			<span class="token keyword">let</span> dir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resultPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// @ts-ignore</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u5BF9\u5DF2\u7ECF\u521B\u5EFA\u7684\u6587\u4EF6\u505A\u6807\u8BB0</span>
				<span class="token comment">// @ts-ignore</span>
				file<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
				<span class="token comment">// \u521B\u5EFA\u6587\u4EF6\u5939</span>
				fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u521B\u5EFA\u6587\u4EF6\u5939</span>
				<span class="token comment">// @ts-ignore</span>
				resultPath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>parent<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
				dir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resultPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
				fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>children<span class="token operator">?.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u5982\u679C\u5B58\u5728children\uFF0C\u5BF9children\u4E2D\u7684\u6BCF\u4E00\u4E2A\u8DEF\u7531\u90FD\u505A\u4E0A\u7236\u6587\u4EF6\u5939\u7684\u8DEF\u5F84\u6807\u8BC6</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> child <span class="token keyword">of</span> file<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// @ts-ignore</span>
					child<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFile</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u521B\u5EFA\u6587\u4EF6</span>
				fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>
					path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					file<span class="token punctuation">.</span>fileData<span class="token operator">!</span><span class="token punctuation">,</span>
					err <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
						<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ServiceApi \u7C7B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getApiTemp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../template/api&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> matchPath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../utils/matchPath&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">EOL</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;os&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> File <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./File&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> InitClass <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../interface/InitClass&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ServiceApi</span> <span class="token keyword">implements</span> <span class="token class-name">InitClass</span> <span class="token punctuation">{</span>
	originData<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">static</span> instances<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
	<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

	<span class="token function">init</span><span class="token punctuation">(</span>context<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> file <span class="token keyword">of</span> context<span class="token punctuation">.</span>files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			file<span class="token punctuation">.</span>fileData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">serviceToFunc</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>fileData<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * \u5C06NestJS Controller\u5C42\u7684\u8DEF\u7531\u8F6C\u6362\u6210\u5BF9\u5E94JS\u7684\u8BF7\u6C42\u65B9\u6CD5
	 * <span class="token keyword">@example</span>
	 * \`@Controller(&#39;business-info&#39;);
	 *  export class BusinessInfoController <span class="token punctuation">{</span>
	 *     &quot;@Get(&#39;/createTemp&#39;)&quot;
	 *      getCreateTemp()<span class="token punctuation">{</span><span class="token punctuation">}</span>
	 * <span class="token punctuation">}</span>\`
	 * ==&gt;
	 *function createTemp(params)<span class="token punctuation">{</span>
	 *    return post(&#39;business-info/createTemp&#39;,params)
	 *<span class="token punctuation">}</span>
	 * */</span>
	<span class="token function">serviceToFunc</span><span class="token punctuation">(</span>originData<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> fileData<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
		<span class="token comment">// \u6839\u8DEF\u5F84</span>
		<span class="token keyword">const</span> rootPath <span class="token operator">=</span> <span class="token function">matchPath</span><span class="token punctuation">(</span>originData<span class="token punctuation">,</span> <span class="token string">&quot;Controller&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
		<span class="token comment">// \u5B50\u8DEF\u5F84</span>
		<span class="token keyword">const</span> childPath <span class="token operator">=</span> <span class="token function">matchPath</span><span class="token punctuation">(</span>originData<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;Post&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Get&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> cPath <span class="token keyword">of</span> childPath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> apiName <span class="token operator">=</span> cPath<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> cPath<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token function">getApiTemp</span><span class="token punctuation">(</span>apiName<span class="token punctuation">,</span> rootPath<span class="token punctuation">,</span> cPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
			fileData <span class="token operator">+=</span> api <span class="token operator">+</span> <span class="token constant">EOL</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> fileData<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Route \u7C7B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> InitClass <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../interface/InitClass&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> template_route <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../template/route&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FileData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../interface/FileData&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> clearScreenDown <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;readline&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Route</span> <span class="token keyword">implements</span> <span class="token class-name">InitClass</span> <span class="token punctuation">{</span>
	files <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token function">constructor</span><span class="token punctuation">(</span>files<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>files <span class="token operator">=</span> files<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">init</span><span class="token punctuation">(</span>context<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		context<span class="token punctuation">.</span>files<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createRoute</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">createRoute</span><span class="token punctuation">(</span>files<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> res<span class="token operator">:</span> FileData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> fileName <span class="token keyword">in</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u7ED3\u679C\u6570\u636E</span>
			<span class="token keyword">let</span> route_data<span class="token punctuation">;</span>

			<span class="token comment">// \\r?: \u5339\u914D\u53EF\u9009\u7684\u56DE\u8F66\u7B26 \\r</span>
			<span class="token comment">// \\n: \u5339\u914D\u6362\u884C\u7B26</span>
			<span class="token comment">// m: \u8868\u793A\u591A\u884C\u5339\u914D\uFF0C\u5373\u5728\u5339\u914D\u6587\u672C\u4E2D\u641C\u7D22\u6362\u884C\u7B26\u5E76\u5339\u914D\u3002</span>
			<span class="token comment">// const data = template.split(/\\r?\\n/gm);</span>

			<span class="token comment">// \u6570\u636E\u66FF\u6362,\u4E0D\u7528\u8BFB\u53D6\u6587\u4EF6</span>
			route_data <span class="token operator">=</span> template_route
				<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{\\{name\\}\\}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{\\{path\\}\\}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> files<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">let</span> file_data <span class="token operator">=</span> <span class="token punctuation">{</span>
				fileName<span class="token operator">:</span> fileName<span class="token punctuation">,</span>
				fileData<span class="token operator">:</span> route_data <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
				filePath<span class="token operator">:</span> files<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span><span class="token punctuation">,</span>
				children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> files<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">let</span> copy_file_data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>file_data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				copy_file_data<span class="token punctuation">.</span>fileData <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
				copy_file_data<span class="token punctuation">.</span>filePath <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
				copy_file_data<span class="token punctuation">.</span>fileName <span class="token operator">=</span> fileName<span class="token punctuation">;</span>
				<span class="token comment">// @ts-ignore</span>
				file_data<span class="token punctuation">[</span><span class="token string">&quot;children&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
					<span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createRoute</span><span class="token punctuation">(</span>files<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span><span class="token punctuation">)</span>
				<span class="token punctuation">)</span><span class="token punctuation">;</span>
				res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>file_data<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>file_data<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> res<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49\u4E00\u4E2A\u5BB9\u5668\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../decorator/inject&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ServiceApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./ServiceApi&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> File <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./File&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Route <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./Route&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Container</span> <span class="token punctuation">{</span>
	<span class="token keyword">static</span> instances<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> instance <span class="token keyword">of</span> Container<span class="token punctuation">.</span>instances<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u6267\u884C\u5B9E\u4F8B\u4E2D\u7684init\u65B9\u6CD5</span>
			instance<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u5411\u4F9D\u8D56\u5173\u7CFBMap\u4E2D\u6CE8\u5165\u5B9E\u4F8B</span>
	<span class="token keyword">static</span> inject<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token keyword">new</span></span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
		instance<span class="token operator">:</span> InstanceType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
	<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		Container<span class="token punctuation">.</span>instances<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">,</span> instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6CE8\u5165Api\u7C7B\u5B9E\u4F8B\uFF0C\u7528\u4E8E\u5904\u7406\u6587\u4EF6\u8BFB\u53D6\u540E\u7684\u6E90\u6587\u4EF6\u6570\u636E\uFF0C\u9700\u8981\u5728Container\u524D\u6CE8\u5165</span>
File<span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServiceApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
File<span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span>
	<span class="token keyword">new</span> <span class="token class-name">Route</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		home<span class="token operator">:</span> <span class="token string">&quot;@/pages/home&quot;</span><span class="token punctuation">,</span>
		bar<span class="token operator">:</span> <span class="token punctuation">{</span>
			bar1<span class="token operator">:</span> <span class="token string">&quot;@/pages/bar/bar1&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6CE8\u5165\u6587\u4EF6\u7C7B\u5B9E\u4F8B\uFF0C\u7528\u4E8E\u6DFB\u52A0\u4E00\u4E2A\u6D41\u7A0B\u6240\u6709\u5FC5\u5907\u6587\u4EF6</span>
Container<span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span>
	<span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		business<span class="token operator">:</span> <span class="token string">&quot;../create-api/business-info.txt&quot;</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9E\u4F8B\u5316\u4E00\u4E2A\u65B0\u7684\u6D41\u7A0B</span>
<span class="token keyword">let</span> lc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E09\u6BB5\u4EE3\u7801\u4E2D\uFF1A</p><ul><li>\u4E09\u4E2A\u6A21\u5757\u4E92\u4E0D\u76F8\u5173\uFF0C\u6A21\u5757\u4E0E\u6A21\u5757\u4E4B\u95F4\u6CA1\u6709\u5F88\u5F3A\u7684\u5173\u8054</li><li>\u901A\u8FC7\u6CE8\u5165\u5B9E\u4F8B\u3001\u5728\u9AD8\u5C42\u6B21\u6A21\u5757\u4E2D\u5B9E\u73B0 init \u65B9\u6CD5\u6765\u5B9E\u73B0\u6A21\u5757\u4E4B\u95F4\u7684\u5173\u8054</li></ul><p>\u5927\u5927\u7684\u964D\u4F4E\u4E86\u8026\u5408\u5EA6\u3002</p>`,14);function d(v,m){const t=i("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[s("\u5177\u4F53\u4F8B\u5B50\u5DF2\u7ECF\u5B9E\u73B0\u8FC7\u4E86\uFF0C"),n("a",k,[s("\u5728\u8FD9\u91CC"),c(t)])]),r])}const y=p(l,[["render",d],["__file","ioc.html.vue"]]);export{y as default};
