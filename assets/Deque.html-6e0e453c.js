const n=JSON.parse('{"key":"v-530e0899","path":"/study/basic/Deque.html","title":"双端队列","lang":"zh-CN","frontmatter":{"icon":"computer","date":"2023-04-04T00:00:00.000Z","category":["数据结构"],"tag":["学习笔记","双端队列"],"description":"双端队列 实现代码： class Deque { \\tconstructor() { \\t\\tthis.count = 0; \\t\\tthis.lowestCount = 0; \\t\\tthis.items = {}; \\t} \\tisEmpty() { \\t\\treturn this.count === 0; \\t} \\taddFront(element) { \\t\\tif (this.isEmpty()) { \\t\\t\\tthis.addBack(element); \\t\\t} else if (this.lowestCount &gt; 0) { \\t\\t\\tthis.lowestCount--; \\t\\t\\tthis.items[this.lowestCount] = element; \\t\\t} else { \\t\\t\\tfor (let i = this.count; i &gt; 0; i--) { \\t\\t\\t\\tthis.items[i] = this.items[i - 1]; \\t\\t\\t} \\t\\t\\tthis.items[0] = element; \\t\\t\\tthis.count++; \\t\\t\\tthis.lowestCount = 0; \\t\\t} \\t} \\taddBack(element) { \\t\\tthis.items[this.count] = element; \\t\\tthis.count++; \\t} \\tremoveFront() { \\t\\tconst res = this.items[this.lowestCount]; \\t\\tdelete this.items[this.lowestCount]; \\t\\tthis.lowestCount++; \\t\\treturn res; \\t} \\tremoveBack() { \\t\\tconst res = this.items[this.count - 1]; \\t\\tdelete this.items[this.count - 1]; \\t\\tthis.count--; \\t\\treturn res; \\t} \\tpeekFront() { \\t\\treturn this.items[this.lowestCount]; \\t} \\tpeekBack() { \\t\\treturn this.items[this.count - 1]; \\t} }","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/study/basic/Deque.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"双端队列"}],["meta",{"property":"og:description","content":"双端队列 实现代码： class Deque { \\tconstructor() { \\t\\tthis.count = 0; \\t\\tthis.lowestCount = 0; \\t\\tthis.items = {}; \\t} \\tisEmpty() { \\t\\treturn this.count === 0; \\t} \\taddFront(element) { \\t\\tif (this.isEmpty()) { \\t\\t\\tthis.addBack(element); \\t\\t} else if (this.lowestCount &gt; 0) { \\t\\t\\tthis.lowestCount--; \\t\\t\\tthis.items[this.lowestCount] = element; \\t\\t} else { \\t\\t\\tfor (let i = this.count; i &gt; 0; i--) { \\t\\t\\t\\tthis.items[i] = this.items[i - 1]; \\t\\t\\t} \\t\\t\\tthis.items[0] = element; \\t\\t\\tthis.count++; \\t\\t\\tthis.lowestCount = 0; \\t\\t} \\t} \\taddBack(element) { \\t\\tthis.items[this.count] = element; \\t\\tthis.count++; \\t} \\tremoveFront() { \\t\\tconst res = this.items[this.lowestCount]; \\t\\tdelete this.items[this.lowestCount]; \\t\\tthis.lowestCount++; \\t\\treturn res; \\t} \\tremoveBack() { \\t\\tconst res = this.items[this.count - 1]; \\t\\tdelete this.items[this.count - 1]; \\t\\tthis.count--; \\t\\treturn res; \\t} \\tpeekFront() { \\t\\treturn this.items[this.lowestCount]; \\t} \\tpeekBack() { \\t\\treturn this.items[this.count - 1]; \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-30T14:45:36.000Z"}],["meta",{"property":"article:tag","content":"学习笔记"}],["meta",{"property":"article:tag","content":"双端队列"}],["meta",{"property":"article:published_time","content":"2023-04-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-30T14:45:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"双端队列\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-04T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-30T14:45:36.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1682865936000,"updatedTime":1682865936000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":1}]},"readingTime":{"minutes":1.4,"words":421},"filePathRelative":"study/basic/Deque.md","localizedDate":"2023年4月4日","excerpt":"<h1> 双端队列</h1>\\n<p>实现代码：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Deque</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lowestCount <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token function\\">isEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count <span class=\\"token operator\\">===</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token function\\">addFront</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">element</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addBack</span><span class=\\"token punctuation\\">(</span>element<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lowestCount <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lowestCount<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lowestCount<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> element<span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count<span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> element<span class=\\"token punctuation\\">;</span>\\n\\t\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lowestCount <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token function\\">addBack</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">element</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> element<span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token function\\">removeFront</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">const</span> res <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lowestCount<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">delete</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lowestCount<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lowestCount<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> res<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token function\\">removeBack</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">const</span> res <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">delete</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> res<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token function\\">peekFront</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>lowestCount<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token function\\">peekBack</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>items<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>count <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
