const t=JSON.parse('{"key":"v-16a01a4e","path":"/study/frontend/ts/ioc.html","title":"IoC","lang":"zh-CN","frontmatter":{"icon":"javascript","date":"2023-02-20T00:00:00.000Z","category":["前端","TS"],"tag":["IoC","学习笔记"],"description":"IoC 之前刷到很多 Java 中关于 IoC 的视频，看着好有意思就想了解一下 JS 中是否有相同的使用场景？ 什么是 IoC： IoC（Inversion of Control）控制反转或者依赖倒置，是面向对象编程中的一种设计原则，用来降低计算机代码之间的耦合度。 我看 Java 博主对于 IoC 的介绍，初步理解为是 Java 中是以 Class 为基础的，每次使用一个 Class 的时候都需要手动去 new 一个，非常的繁琐，用 IoC 可以很方便的解决这一繁琐的问题。不过这个理解非常的片面，存在一定的问题，IoC 不止解决了这一点点问题。","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/study/frontend/ts/ioc.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"IoC"}],["meta",{"property":"og:description","content":"IoC 之前刷到很多 Java 中关于 IoC 的视频，看着好有意思就想了解一下 JS 中是否有相同的使用场景？ 什么是 IoC： IoC（Inversion of Control）控制反转或者依赖倒置，是面向对象编程中的一种设计原则，用来降低计算机代码之间的耦合度。 我看 Java 博主对于 IoC 的介绍，初步理解为是 Java 中是以 Class 为基础的，每次使用一个 Class 的时候都需要手动去 new 一个，非常的繁琐，用 IoC 可以很方便的解决这一繁琐的问题。不过这个理解非常的片面，存在一定的问题，IoC 不止解决了这一点点问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-21T13:33:30.000Z"}],["meta",{"property":"article:tag","content":"IoC"}],["meta",{"property":"article:tag","content":"学习笔记"}],["meta",{"property":"article:published_time","content":"2023-02-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-21T13:33:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IoC\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-21T13:33:30.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"加入 IoC 思想","slug":"加入-ioc-思想","link":"#加入-ioc-思想","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1676905272000,"updatedTime":1676986410000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":2}]},"readingTime":{"minutes":7.01,"words":2104},"filePathRelative":"study/frontend/ts/ioc.md","localizedDate":"2023年2月20日","excerpt":"<h1> IoC</h1>\\n<p>之前刷到很多 Java 中关于 IoC 的视频，看着好有意思就想了解一下 JS 中是否有相同的使用场景？</p>\\n<p>什么是 IoC：</p>\\n<blockquote>\\n<p>IoC（Inversion of Control）控制反转或者依赖倒置，是面向对象编程中的一种设计原则，用来降低计算机代码之间的耦合度。</p>\\n</blockquote>\\n<p>我看 Java 博主对于 IoC 的介绍，初步理解为是 Java 中是以 Class 为基础的，每次使用一个 Class 的时候都需要手动去 new 一个，非常的繁琐，用 IoC 可以很方便的解决这一繁琐的问题。不过这个理解非常的片面，存在一定的问题，IoC 不止解决了这一点点问题。</p>","autoDesc":true}');export{t as data};
