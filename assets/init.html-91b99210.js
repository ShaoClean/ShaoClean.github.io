const n=JSON.parse(`{"key":"v-e77b9f42","path":"/study/backend/nodeJS/init.html","title":"初始化一个最基础的后端接口","lang":"zh-CN","frontmatter":{"icon":"nodeJS","date":"2022-09-28T00:00:00.000Z","star":10,"category":["后端","Node"],"tag":["初始化框架","学习笔记"],"description":"初始化一个最基础的后端接口 1.安装express框架 npm i express 2.index.js文件（入口文件） const express = require('express'); const app = express(); app.get('/', (req, res) =&gt; { res.send('Hello World!'); }); app.listen(3000, () =&gt; { console.log('示例应用正在监听 3000 端口 !'); });","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/study/backend/nodeJS/init.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"初始化一个最基础的后端接口"}],["meta",{"property":"og:description","content":"初始化一个最基础的后端接口 1.安装express框架 npm i express 2.index.js文件（入口文件） const express = require('express'); const app = express(); app.get('/', (req, res) =&gt; { res.send('Hello World!'); }); app.listen(3000, () =&gt; { console.log('示例应用正在监听 3000 端口 !'); });"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-10-02T04:36:34.000Z"}],["meta",{"property":"article:tag","content":"初始化框架"}],["meta",{"property":"article:tag","content":"学习笔记"}],["meta",{"property":"article:published_time","content":"2022-09-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-10-02T04:36:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初始化一个最基础的后端接口\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-28T00:00:00.000Z\\",\\"dateModified\\":\\"2022-10-02T04:36:34.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1664371652000,"updatedTime":1664685394000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":2}]},"readingTime":{"minutes":0.27,"words":80},"filePathRelative":"study/backend/nodeJS/init.md","localizedDate":"2022年9月28日","excerpt":"<h1> 初始化一个最基础的后端接口</h1>\\n<p>1.安装express框架</p>\\n<p><code>npm i express</code></p>\\n<p>2.index.js文件（入口文件）</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> express <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'express'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> app <span class=\\"token operator\\">=</span> <span class=\\"token function\\">express</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">req<span class=\\"token punctuation\\">,</span> res</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Hello World!'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">listen</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3000</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'示例应用正在监听 3000 端口 !'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
