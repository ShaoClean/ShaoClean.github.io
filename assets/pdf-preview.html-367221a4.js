const n=JSON.parse(`{"key":"v-43130cf3","path":"/study/frontend/vue/pdf-preview.html","title":"Node 发送 PDF 给前端预览","lang":"zh-CN","frontmatter":{"icon":"vue","date":"2023-01-12T00:00:00.000Z","category":["前端","Vue"],"tag":["pdf-preview","学习笔记"],"description":"Node 发送 PDF 给前端预览 后端比较简单，只需要使用fs系统的相关 API 读取文件就可以： // nest js const fs = require('fs'); @Post('/fileDetail') async findOne(@Body('attachmentId') id: string,@Res() res) { // 根据Id获取到对应用户上传的pdf文件 const fileInfo = await this.attachmentService.findOne(id); // 获取到文件在本地服务器的路径 const path = fileInfo.path; // 读取文件，结果是一个Buffer类型的对象 const data = fs.readFileSync(path); // 将文件数据放到file对象中 fileInfo.data = data; // 发送文件 res.send(fileInfo) }","head":[["meta",{"property":"og:url","content":"https://doc.shaoclean.top/study/frontend/vue/pdf-preview.html"}],["meta",{"property":"og:site_name","content":"clog"}],["meta",{"property":"og:title","content":"Node 发送 PDF 给前端预览"}],["meta",{"property":"og:description","content":"Node 发送 PDF 给前端预览 后端比较简单，只需要使用fs系统的相关 API 读取文件就可以： // nest js const fs = require('fs'); @Post('/fileDetail') async findOne(@Body('attachmentId') id: string,@Res() res) { // 根据Id获取到对应用户上传的pdf文件 const fileInfo = await this.attachmentService.findOne(id); // 获取到文件在本地服务器的路径 const path = fileInfo.path; // 读取文件，结果是一个Buffer类型的对象 const data = fs.readFileSync(path); // 将文件数据放到file对象中 fileInfo.data = data; // 发送文件 res.send(fileInfo) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-12T12:43:45.000Z"}],["meta",{"property":"article:tag","content":"pdf-preview"}],["meta",{"property":"article:tag","content":"学习笔记"}],["meta",{"property":"article:published_time","content":"2023-01-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-12T12:43:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Node 发送 PDF 给前端预览\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-01-12T12:43:45.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1673527425000,"updatedTime":1673527425000,"contributors":[{"name":"clean","email":"1518136109@qq.com","commits":1}]},"readingTime":{"minutes":1.44,"words":432},"filePathRelative":"study/frontend/vue/pdf-preview.md","localizedDate":"2023年1月12日","excerpt":"<h1> Node 发送 PDF 给前端预览</h1>\\n<p>后端比较简单，只需要使用<code>fs</code>系统的相关 API 读取文件就可以：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// nest js</span>\\n<span class=\\"token keyword\\">const</span> fs <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'fs'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n@<span class=\\"token function\\">Post</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/fileDetail'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">async</span> <span class=\\"token function\\">findOne</span><span class=\\"token punctuation\\">(</span>@<span class=\\"token function\\">Body</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'attachmentId'</span><span class=\\"token punctuation\\">)</span> id<span class=\\"token operator\\">:</span> string<span class=\\"token punctuation\\">,</span>@<span class=\\"token function\\">Res</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> res<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 根据Id获取到对应用户上传的pdf文件</span>\\n  <span class=\\"token keyword\\">const</span> fileInfo <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>attachmentService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">findOne</span><span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 获取到文件在本地服务器的路径</span>\\n  <span class=\\"token keyword\\">const</span> path <span class=\\"token operator\\">=</span> fileInfo<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 读取文件，结果是一个Buffer类型的对象</span>\\n  <span class=\\"token keyword\\">const</span> data <span class=\\"token operator\\">=</span> fs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">readFileSync</span><span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 将文件数据放到file对象中</span>\\n  fileInfo<span class=\\"token punctuation\\">.</span>data <span class=\\"token operator\\">=</span> data<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 发送文件</span>\\n  res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span>fileInfo<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
